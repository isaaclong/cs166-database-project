Notes

-Many of functions, as they are now, will break if the database schema is changed. Just something to keep in mind.
-Possibly fix the User class to properly get columns instead of having to deal with
lists of lists of String
-remember to add functionality to quit what youâ€™re doing and go back to main menu at any time
-add 3 depth constraint check for friends
-Is it more efficient to do one "bulk" query for all users and search that over and over again, or query the db each time?
-be careful with trailing spaces when inserting/cross referencing strings in db. This is caused by 10 char limit in database type; should we go VARCHAR or does it matter?
-used a combination of on the fly queries and searching through preloaded user data: which is more efficient?
-maybe come up with a numbering system for easier user interaction?
-as of now, friend statuses can be "pending" or "friend"

Useful Functions

-executeUpdate
  for CREATE, INSERT, UPDATE, DELETE, DROP statements
-executeQueryAndPrintResult
-executeQueryAndReturnResult
-executeQuery

Done

-New User Registration
  New users can set up accounts and provide username, password, email through
  commandline interface. Duplicate usernames are detected, and are not allowed.
  (Name and dateofbirth remain empty...do we need to get these as well?).
-User Login/Logout
  (Provided for us)
-Change password
  Users can change password
-Accept or reject Connection Request
-Send Connection Request
  User can send connection requests within 3 levels of connection. New users
  who have 0 connections can make up to 5 new connections without this rule
  applying. The lvl 3 depth constraint is checked.

TODO

Bare Minimum

-Code cleanup
  I've gotten everything to work as intended, but often times not in the cleanest
  ways. I'd like to clean up the code and refactor to make sure it's as high
  quality as it can get.

-Search people
  Users can search through entire usr relation for particular names, and return
  a list of matches/close matches. Can probably be done with regular expressions
  and some kind of simple ranking function, or use an already existing library

-View Friends and go to friend's profile
  each time you view a profile you can either send a connection request or send
  a message to them
-Send message to anyone on network
-View Messages and have option to delete messages

-Scripts
  for bulk-loading data for testing, and for triggers/stored procedures/indexes
  if applicable

-Project report
  1-2 pages describing who did what, any problems we encountered, etc. More details
  in project requirements

If We Have Time

-Robust UI
-Triggers and stored procedures
-Performance tuning and indexing
-Anything else fancy we can add
